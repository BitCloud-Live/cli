// Code generated by protoc-gen-go. DO NOT EDIT.
// source: UV.proto

package uv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServiceState int32

const (
	ServiceState_Err         ServiceState = 0
	ServiceState_UpPending   ServiceState = 1
	ServiceState_Up          ServiceState = 2
	ServiceState_PayPending  ServiceState = 3
	ServiceState_StopPending ServiceState = 4
	ServiceState_Stop        ServiceState = 5
)

var ServiceState_name = map[int32]string{
	0: "Err",
	1: "UpPending",
	2: "Up",
	3: "PayPending",
	4: "StopPending",
	5: "Stop",
}
var ServiceState_value = map[string]int32{
	"Err":         0,
	"UpPending":   1,
	"Up":          2,
	"PayPending":  3,
	"StopPending": 4,
	"Stop":        5,
}

func (x ServiceState) String() string {
	return proto.EnumName(ServiceState_name, int32(x))
}
func (ServiceState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{0}
}

type LoginReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{0}
}
func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (dst *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(dst, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthenticationRes struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticationRes) Reset()         { *m = AuthenticationRes{} }
func (m *AuthenticationRes) String() string { return proto.CompactTextString(m) }
func (*AuthenticationRes) ProtoMessage()    {}
func (*AuthenticationRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{1}
}
func (m *AuthenticationRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticationRes.Unmarshal(m, b)
}
func (m *AuthenticationRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticationRes.Marshal(b, m, deterministic)
}
func (dst *AuthenticationRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationRes.Merge(dst, src)
}
func (m *AuthenticationRes) XXX_Size() int {
	return xxx_messageInfo_AuthenticationRes.Size(m)
}
func (m *AuthenticationRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationRes.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationRes proto.InternalMessageInfo

func (m *AuthenticationRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type PortforwardRes struct {
	Svc                  string   `protobuf:"bytes,1,opt,name=svc" json:"svc,omitempty"`
	Ports                []string `protobuf:"bytes,2,rep,name=ports" json:"ports,omitempty"`
	Token                []byte   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	ProxyHost            string   `protobuf:"bytes,4,opt,name=proxyHost" json:"proxyHost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortforwardRes) Reset()         { *m = PortforwardRes{} }
func (m *PortforwardRes) String() string { return proto.CompactTextString(m) }
func (*PortforwardRes) ProtoMessage()    {}
func (*PortforwardRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{2}
}
func (m *PortforwardRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortforwardRes.Unmarshal(m, b)
}
func (m *PortforwardRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortforwardRes.Marshal(b, m, deterministic)
}
func (dst *PortforwardRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortforwardRes.Merge(dst, src)
}
func (m *PortforwardRes) XXX_Size() int {
	return xxx_messageInfo_PortforwardRes.Size(m)
}
func (m *PortforwardRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PortforwardRes.DiscardUnknown(m)
}

var xxx_messageInfo_PortforwardRes proto.InternalMessageInfo

func (m *PortforwardRes) GetSvc() string {
	if m != nil {
		return m.Svc
	}
	return ""
}

func (m *PortforwardRes) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *PortforwardRes) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *PortforwardRes) GetProxyHost() string {
	if m != nil {
		return m.ProxyHost
	}
	return ""
}

type Chunk struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{3}
}
func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (dst *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(dst, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{4}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// ID for select [service, application, image]
type Identity struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identity) Reset()         { *m = Identity{} }
func (m *Identity) String() string { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()    {}
func (*Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{5}
}
func (m *Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identity.Unmarshal(m, b)
}
func (m *Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identity.Marshal(b, m, deterministic)
}
func (dst *Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identity.Merge(dst, src)
}
func (m *Identity) XXX_Size() int {
	return xxx_messageInfo_Identity.Size(m)
}
func (m *Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_Identity proto.InternalMessageInfo

func (m *Identity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AttachIdentity struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Attachment           string   `protobuf:"bytes,2,opt,name=attachment" json:"attachment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachIdentity) Reset()         { *m = AttachIdentity{} }
func (m *AttachIdentity) String() string { return proto.CompactTextString(m) }
func (*AttachIdentity) ProtoMessage()    {}
func (*AttachIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{6}
}
func (m *AttachIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachIdentity.Unmarshal(m, b)
}
func (m *AttachIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachIdentity.Marshal(b, m, deterministic)
}
func (dst *AttachIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachIdentity.Merge(dst, src)
}
func (m *AttachIdentity) XXX_Size() int {
	return xxx_messageInfo_AttachIdentity.Size(m)
}
func (m *AttachIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_AttachIdentity proto.InternalMessageInfo

func (m *AttachIdentity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AttachIdentity) GetAttachment() string {
	if m != nil {
		return m.Attachment
	}
	return ""
}

type ListReq struct {
	Index                int32    `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{7}
}
func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (dst *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(dst, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

func (m *ListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{8}
}
func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (dst *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(dst, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type ListStatusRes struct {
	Names                []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Next                 int32    `protobuf:"varint,3,opt,name=next" json:"next,omitempty"`
	Previous             int32    `protobuf:"varint,4,opt,name=previous" json:"previous,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStatusRes) Reset()         { *m = ListStatusRes{} }
func (m *ListStatusRes) String() string { return proto.CompactTextString(m) }
func (*ListStatusRes) ProtoMessage()    {}
func (*ListStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{9}
}
func (m *ListStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStatusRes.Unmarshal(m, b)
}
func (m *ListStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStatusRes.Marshal(b, m, deterministic)
}
func (dst *ListStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStatusRes.Merge(dst, src)
}
func (m *ListStatusRes) XXX_Size() int {
	return xxx_messageInfo_ListStatusRes.Size(m)
}
func (m *ListStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListStatusRes proto.InternalMessageInfo

func (m *ListStatusRes) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *ListStatusRes) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListStatusRes) GetNext() int32 {
	if m != nil {
		return m.Next
	}
	return 0
}

func (m *ListStatusRes) GetPrevious() int32 {
	if m != nil {
		return m.Previous
	}
	return 0
}

type DomainCreateReq struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
	Tls                  bool     `protobuf:"varint,2,opt,name=tls" json:"tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainCreateReq) Reset()         { *m = DomainCreateReq{} }
func (m *DomainCreateReq) String() string { return proto.CompactTextString(m) }
func (*DomainCreateReq) ProtoMessage()    {}
func (*DomainCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{10}
}
func (m *DomainCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainCreateReq.Unmarshal(m, b)
}
func (m *DomainCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainCreateReq.Marshal(b, m, deterministic)
}
func (dst *DomainCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainCreateReq.Merge(dst, src)
}
func (m *DomainCreateReq) XXX_Size() int {
	return xxx_messageInfo_DomainCreateReq.Size(m)
}
func (m *DomainCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_DomainCreateReq proto.InternalMessageInfo

func (m *DomainCreateReq) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DomainCreateReq) GetTls() bool {
	if m != nil {
		return m.Tls
	}
	return false
}

type DomainStatusRes struct {
	Created              *Timestamp `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	Updated              *Timestamp `protobuf:"bytes,2,opt,name=updated" json:"updated,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Domain               string     `protobuf:"bytes,4,opt,name=domain" json:"domain,omitempty"`
	Tls                  string     `protobuf:"bytes,5,opt,name=tls" json:"tls,omitempty"`
	AttachedTo           string     `protobuf:"bytes,6,opt,name=attachedTo" json:"attachedTo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DomainStatusRes) Reset()         { *m = DomainStatusRes{} }
func (m *DomainStatusRes) String() string { return proto.CompactTextString(m) }
func (*DomainStatusRes) ProtoMessage()    {}
func (*DomainStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{11}
}
func (m *DomainStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainStatusRes.Unmarshal(m, b)
}
func (m *DomainStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainStatusRes.Marshal(b, m, deterministic)
}
func (dst *DomainStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainStatusRes.Merge(dst, src)
}
func (m *DomainStatusRes) XXX_Size() int {
	return xxx_messageInfo_DomainStatusRes.Size(m)
}
func (m *DomainStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_DomainStatusRes proto.InternalMessageInfo

func (m *DomainStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *DomainStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *DomainStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DomainStatusRes) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DomainStatusRes) GetTls() string {
	if m != nil {
		return m.Tls
	}
	return ""
}

func (m *DomainStatusRes) GetAttachedTo() string {
	if m != nil {
		return m.AttachedTo
	}
	return ""
}

type VolumeCreateReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Spec                 string   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeCreateReq) Reset()         { *m = VolumeCreateReq{} }
func (m *VolumeCreateReq) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateReq) ProtoMessage()    {}
func (*VolumeCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{12}
}
func (m *VolumeCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateReq.Unmarshal(m, b)
}
func (m *VolumeCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateReq.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateReq.Merge(dst, src)
}
func (m *VolumeCreateReq) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateReq.Size(m)
}
func (m *VolumeCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateReq proto.InternalMessageInfo

func (m *VolumeCreateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeCreateReq) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

type VolumeAttachReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Attachment           string   `protobuf:"bytes,2,opt,name=attachment" json:"attachment,omitempty"`
	MountPath            string   `protobuf:"bytes,3,opt,name=mountPath" json:"mountPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeAttachReq) Reset()         { *m = VolumeAttachReq{} }
func (m *VolumeAttachReq) String() string { return proto.CompactTextString(m) }
func (*VolumeAttachReq) ProtoMessage()    {}
func (*VolumeAttachReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{13}
}
func (m *VolumeAttachReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeAttachReq.Unmarshal(m, b)
}
func (m *VolumeAttachReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeAttachReq.Marshal(b, m, deterministic)
}
func (dst *VolumeAttachReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeAttachReq.Merge(dst, src)
}
func (m *VolumeAttachReq) XXX_Size() int {
	return xxx_messageInfo_VolumeAttachReq.Size(m)
}
func (m *VolumeAttachReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeAttachReq.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeAttachReq proto.InternalMessageInfo

func (m *VolumeAttachReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeAttachReq) GetAttachment() string {
	if m != nil {
		return m.Attachment
	}
	return ""
}

func (m *VolumeAttachReq) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

type VolumeSpec struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Class                string   `protobuf:"bytes,2,opt,name=class" json:"class,omitempty"`
	Size                 string   `protobuf:"bytes,4,opt,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSpec) Reset()         { *m = VolumeSpec{} }
func (m *VolumeSpec) String() string { return proto.CompactTextString(m) }
func (*VolumeSpec) ProtoMessage()    {}
func (*VolumeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{14}
}
func (m *VolumeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpec.Unmarshal(m, b)
}
func (m *VolumeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpec.Marshal(b, m, deterministic)
}
func (dst *VolumeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpec.Merge(dst, src)
}
func (m *VolumeSpec) XXX_Size() int {
	return xxx_messageInfo_VolumeSpec.Size(m)
}
func (m *VolumeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpec proto.InternalMessageInfo

func (m *VolumeSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeSpec) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *VolumeSpec) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

type VolumeStatusRes struct {
	Created              *Timestamp  `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	Updated              *Timestamp  `protobuf:"bytes,2,opt,name=updated" json:"updated,omitempty"`
	Name                 string      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Spec                 *VolumeSpec `protobuf:"bytes,4,opt,name=spec" json:"spec,omitempty"`
	AttachedTo           string      `protobuf:"bytes,5,opt,name=attachedTo" json:"attachedTo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeStatusRes) Reset()         { *m = VolumeStatusRes{} }
func (m *VolumeStatusRes) String() string { return proto.CompactTextString(m) }
func (*VolumeStatusRes) ProtoMessage()    {}
func (*VolumeStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{15}
}
func (m *VolumeStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeStatusRes.Unmarshal(m, b)
}
func (m *VolumeStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeStatusRes.Marshal(b, m, deterministic)
}
func (dst *VolumeStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeStatusRes.Merge(dst, src)
}
func (m *VolumeStatusRes) XXX_Size() int {
	return xxx_messageInfo_VolumeStatusRes.Size(m)
}
func (m *VolumeStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeStatusRes proto.InternalMessageInfo

func (m *VolumeStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *VolumeStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *VolumeStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeStatusRes) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *VolumeStatusRes) GetAttachedTo() string {
	if m != nil {
		return m.AttachedTo
	}
	return ""
}

type ImgStatusRes struct {
	Created              *Timestamp `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	Updated              *Timestamp `protobuf:"bytes,2,opt,name=updated" json:"updated,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ImgStatusRes) Reset()         { *m = ImgStatusRes{} }
func (m *ImgStatusRes) String() string { return proto.CompactTextString(m) }
func (*ImgStatusRes) ProtoMessage()    {}
func (*ImgStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{16}
}
func (m *ImgStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgStatusRes.Unmarshal(m, b)
}
func (m *ImgStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgStatusRes.Marshal(b, m, deterministic)
}
func (dst *ImgStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgStatusRes.Merge(dst, src)
}
func (m *ImgStatusRes) XXX_Size() int {
	return xxx_messageInfo_ImgStatusRes.Size(m)
}
func (m *ImgStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_ImgStatusRes proto.InternalMessageInfo

func (m *ImgStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ImgStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *ImgStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ImgBuildReq struct {
	// Types that are valid to be assigned to Value:
	//	*ImgBuildReq_Meta_
	//	*ImgBuildReq_Chunk_
	Value                isImgBuildReq_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ImgBuildReq) Reset()         { *m = ImgBuildReq{} }
func (m *ImgBuildReq) String() string { return proto.CompactTextString(m) }
func (*ImgBuildReq) ProtoMessage()    {}
func (*ImgBuildReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{17}
}
func (m *ImgBuildReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgBuildReq.Unmarshal(m, b)
}
func (m *ImgBuildReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgBuildReq.Marshal(b, m, deterministic)
}
func (dst *ImgBuildReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgBuildReq.Merge(dst, src)
}
func (m *ImgBuildReq) XXX_Size() int {
	return xxx_messageInfo_ImgBuildReq.Size(m)
}
func (m *ImgBuildReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgBuildReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImgBuildReq proto.InternalMessageInfo

type isImgBuildReq_Value interface {
	isImgBuildReq_Value()
}

type ImgBuildReq_Meta_ struct {
	Meta *ImgBuildReq_Meta `protobuf:"bytes,1,opt,name=meta,oneof"`
}
type ImgBuildReq_Chunk_ struct {
	Chunk *ImgBuildReq_Chunk `protobuf:"bytes,2,opt,name=chunk,oneof"`
}

func (*ImgBuildReq_Meta_) isImgBuildReq_Value()  {}
func (*ImgBuildReq_Chunk_) isImgBuildReq_Value() {}

func (m *ImgBuildReq) GetValue() isImgBuildReq_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ImgBuildReq) GetMeta() *ImgBuildReq_Meta {
	if x, ok := m.GetValue().(*ImgBuildReq_Meta_); ok {
		return x.Meta
	}
	return nil
}

func (m *ImgBuildReq) GetChunk() *ImgBuildReq_Chunk {
	if x, ok := m.GetValue().(*ImgBuildReq_Chunk_); ok {
		return x.Chunk
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ImgBuildReq) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ImgBuildReq_OneofMarshaler, _ImgBuildReq_OneofUnmarshaler, _ImgBuildReq_OneofSizer, []interface{}{
		(*ImgBuildReq_Meta_)(nil),
		(*ImgBuildReq_Chunk_)(nil),
	}
}

func _ImgBuildReq_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ImgBuildReq)
	// value
	switch x := m.Value.(type) {
	case *ImgBuildReq_Meta_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case *ImgBuildReq_Chunk_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chunk); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ImgBuildReq.Value has unexpected type %T", x)
	}
	return nil
}

func _ImgBuildReq_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ImgBuildReq)
	switch tag {
	case 1: // value.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImgBuildReq_Meta)
		err := b.DecodeMessage(msg)
		m.Value = &ImgBuildReq_Meta_{msg}
		return true, err
	case 2: // value.chunk
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImgBuildReq_Chunk)
		err := b.DecodeMessage(msg)
		m.Value = &ImgBuildReq_Chunk_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ImgBuildReq_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ImgBuildReq)
	// value
	switch x := m.Value.(type) {
	case *ImgBuildReq_Meta_:
		s := proto.Size(x.Meta)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ImgBuildReq_Chunk_:
		s := proto.Size(x.Chunk)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ImgBuildReq_Meta struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgBuildReq_Meta) Reset()         { *m = ImgBuildReq_Meta{} }
func (m *ImgBuildReq_Meta) String() string { return proto.CompactTextString(m) }
func (*ImgBuildReq_Meta) ProtoMessage()    {}
func (*ImgBuildReq_Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{17, 0}
}
func (m *ImgBuildReq_Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgBuildReq_Meta.Unmarshal(m, b)
}
func (m *ImgBuildReq_Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgBuildReq_Meta.Marshal(b, m, deterministic)
}
func (dst *ImgBuildReq_Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgBuildReq_Meta.Merge(dst, src)
}
func (m *ImgBuildReq_Meta) XXX_Size() int {
	return xxx_messageInfo_ImgBuildReq_Meta.Size(m)
}
func (m *ImgBuildReq_Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgBuildReq_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_ImgBuildReq_Meta proto.InternalMessageInfo

func (m *ImgBuildReq_Meta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ImgBuildReq_Chunk struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Position             int64    `protobuf:"varint,2,opt,name=position" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgBuildReq_Chunk) Reset()         { *m = ImgBuildReq_Chunk{} }
func (m *ImgBuildReq_Chunk) String() string { return proto.CompactTextString(m) }
func (*ImgBuildReq_Chunk) ProtoMessage()    {}
func (*ImgBuildReq_Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{17, 1}
}
func (m *ImgBuildReq_Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgBuildReq_Chunk.Unmarshal(m, b)
}
func (m *ImgBuildReq_Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgBuildReq_Chunk.Marshal(b, m, deterministic)
}
func (dst *ImgBuildReq_Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgBuildReq_Chunk.Merge(dst, src)
}
func (m *ImgBuildReq_Chunk) XXX_Size() int {
	return xxx_messageInfo_ImgBuildReq_Chunk.Size(m)
}
func (m *ImgBuildReq_Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgBuildReq_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_ImgBuildReq_Chunk proto.InternalMessageInfo

func (m *ImgBuildReq_Chunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ImgBuildReq_Chunk) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

type SettingListReq struct {
	Index                int32    `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	App                  string   `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettingListReq) Reset()         { *m = SettingListReq{} }
func (m *SettingListReq) String() string { return proto.CompactTextString(m) }
func (*SettingListReq) ProtoMessage()    {}
func (*SettingListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{18}
}
func (m *SettingListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingListReq.Unmarshal(m, b)
}
func (m *SettingListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingListReq.Marshal(b, m, deterministic)
}
func (dst *SettingListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingListReq.Merge(dst, src)
}
func (m *SettingListReq) XXX_Size() int {
	return xxx_messageInfo_SettingListReq.Size(m)
}
func (m *SettingListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingListReq.DiscardUnknown(m)
}

var xxx_messageInfo_SettingListReq proto.InternalMessageInfo

func (m *SettingListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SettingListReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type SettingInfoReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	App                  string   `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettingInfoReq) Reset()         { *m = SettingInfoReq{} }
func (m *SettingInfoReq) String() string { return proto.CompactTextString(m) }
func (*SettingInfoReq) ProtoMessage()    {}
func (*SettingInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{19}
}
func (m *SettingInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingInfoReq.Unmarshal(m, b)
}
func (m *SettingInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingInfoReq.Marshal(b, m, deterministic)
}
func (dst *SettingInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingInfoReq.Merge(dst, src)
}
func (m *SettingInfoReq) XXX_Size() int {
	return xxx_messageInfo_SettingInfoReq.Size(m)
}
func (m *SettingInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_SettingInfoReq proto.InternalMessageInfo

func (m *SettingInfoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SettingInfoReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type SettingReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	App                  string   `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	File                 []byte   `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettingReq) Reset()         { *m = SettingReq{} }
func (m *SettingReq) String() string { return proto.CompactTextString(m) }
func (*SettingReq) ProtoMessage()    {}
func (*SettingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{20}
}
func (m *SettingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingReq.Unmarshal(m, b)
}
func (m *SettingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingReq.Marshal(b, m, deterministic)
}
func (dst *SettingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingReq.Merge(dst, src)
}
func (m *SettingReq) XXX_Size() int {
	return xxx_messageInfo_SettingReq.Size(m)
}
func (m *SettingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingReq.DiscardUnknown(m)
}

var xxx_messageInfo_SettingReq proto.InternalMessageInfo

func (m *SettingReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SettingReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *SettingReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SettingReq) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type SettingRes struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	App                  string   `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	File                 []byte   `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettingRes) Reset()         { *m = SettingRes{} }
func (m *SettingRes) String() string { return proto.CompactTextString(m) }
func (*SettingRes) ProtoMessage()    {}
func (*SettingRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{21}
}
func (m *SettingRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingRes.Unmarshal(m, b)
}
func (m *SettingRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingRes.Marshal(b, m, deterministic)
}
func (dst *SettingRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingRes.Merge(dst, src)
}
func (m *SettingRes) XXX_Size() int {
	return xxx_messageInfo_SettingRes.Size(m)
}
func (m *SettingRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingRes.DiscardUnknown(m)
}

var xxx_messageInfo_SettingRes proto.InternalMessageInfo

func (m *SettingRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SettingRes) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *SettingRes) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SettingRes) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type ProductRes struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Plan                 []*Plan           `protobuf:"bytes,3,rep,name=plan" json:"plan,omitempty"`
	VariableHints        map[string]string `protobuf:"bytes,4,rep,name=variable_hints,json=variableHints" json:"variable_hints,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProductRes) Reset()         { *m = ProductRes{} }
func (m *ProductRes) String() string { return proto.CompactTextString(m) }
func (*ProductRes) ProtoMessage()    {}
func (*ProductRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{22}
}
func (m *ProductRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRes.Unmarshal(m, b)
}
func (m *ProductRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRes.Marshal(b, m, deterministic)
}
func (dst *ProductRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRes.Merge(dst, src)
}
func (m *ProductRes) XXX_Size() int {
	return xxx_messageInfo_ProductRes.Size(m)
}
func (m *ProductRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRes.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRes proto.InternalMessageInfo

func (m *ProductRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProductRes) GetPlan() []*Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *ProductRes) GetVariableHints() map[string]string {
	if m != nil {
		return m.VariableHints
	}
	return nil
}

type Plan struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Price                uint64   `protobuf:"varint,3,opt,name=price" json:"price,omitempty"`
	Off                  uint64   `protobuf:"varint,4,opt,name=off" json:"off,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Plan) Reset()         { *m = Plan{} }
func (m *Plan) String() string { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()    {}
func (*Plan) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{23}
}
func (m *Plan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plan.Unmarshal(m, b)
}
func (m *Plan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plan.Marshal(b, m, deterministic)
}
func (dst *Plan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plan.Merge(dst, src)
}
func (m *Plan) XXX_Size() int {
	return xxx_messageInfo_Plan.Size(m)
}
func (m *Plan) XXX_DiscardUnknown() {
	xxx_messageInfo_Plan.DiscardUnknown(m)
}

var xxx_messageInfo_Plan proto.InternalMessageInfo

func (m *Plan) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Plan) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Plan) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Plan) GetOff() uint64 {
	if m != nil {
		return m.Off
	}
	return 0
}

type SrvStatusRes struct {
	Created      *Timestamp   `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	Updated      *Timestamp   `protobuf:"bytes,2,opt,name=updated" json:"updated,omitempty"`
	State        ServiceState `protobuf:"varint,3,opt,name=state,enum=uv.ServiceState" json:"state,omitempty"`
	Name         string       `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Plan         string       `protobuf:"bytes,5,opt,name=plan" json:"plan,omitempty"`
	VcapServices string       `protobuf:"bytes,6,opt,name=vcapServices" json:"vcapServices,omitempty"`
	// used for information of service like: [ports, uri, username, ...]
	Variable             map[string]string `protobuf:"bytes,7,rep,name=variable" json:"variable,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrvStatusRes) Reset()         { *m = SrvStatusRes{} }
func (m *SrvStatusRes) String() string { return proto.CompactTextString(m) }
func (*SrvStatusRes) ProtoMessage()    {}
func (*SrvStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{24}
}
func (m *SrvStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvStatusRes.Unmarshal(m, b)
}
func (m *SrvStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvStatusRes.Marshal(b, m, deterministic)
}
func (dst *SrvStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvStatusRes.Merge(dst, src)
}
func (m *SrvStatusRes) XXX_Size() int {
	return xxx_messageInfo_SrvStatusRes.Size(m)
}
func (m *SrvStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_SrvStatusRes proto.InternalMessageInfo

func (m *SrvStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *SrvStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *SrvStatusRes) GetState() ServiceState {
	if m != nil {
		return m.State
	}
	return ServiceState_Err
}

func (m *SrvStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SrvStatusRes) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *SrvStatusRes) GetVcapServices() string {
	if m != nil {
		return m.VcapServices
	}
	return ""
}

func (m *SrvStatusRes) GetVariable() map[string]string {
	if m != nil {
		return m.Variable
	}
	return nil
}

type SrvCreateReq struct {
	ProductName          string            `protobuf:"bytes,1,opt,name=productName" json:"productName,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Plan                 string            `protobuf:"bytes,3,opt,name=plan" json:"plan,omitempty"`
	Variable             map[string]string `protobuf:"bytes,4,rep,name=variable" json:"variable,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrvCreateReq) Reset()         { *m = SrvCreateReq{} }
func (m *SrvCreateReq) String() string { return proto.CompactTextString(m) }
func (*SrvCreateReq) ProtoMessage()    {}
func (*SrvCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{25}
}
func (m *SrvCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvCreateReq.Unmarshal(m, b)
}
func (m *SrvCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvCreateReq.Marshal(b, m, deterministic)
}
func (dst *SrvCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvCreateReq.Merge(dst, src)
}
func (m *SrvCreateReq) XXX_Size() int {
	return xxx_messageInfo_SrvCreateReq.Size(m)
}
func (m *SrvCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_SrvCreateReq proto.InternalMessageInfo

func (m *SrvCreateReq) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *SrvCreateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SrvCreateReq) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *SrvCreateReq) GetVariable() map[string]string {
	if m != nil {
		return m.Variable
	}
	return nil
}

type SrvUpgradeReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Variable             map[string]string `protobuf:"bytes,2,rep,name=variable" json:"variable,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrvUpgradeReq) Reset()         { *m = SrvUpgradeReq{} }
func (m *SrvUpgradeReq) String() string { return proto.CompactTextString(m) }
func (*SrvUpgradeReq) ProtoMessage()    {}
func (*SrvUpgradeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{26}
}
func (m *SrvUpgradeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvUpgradeReq.Unmarshal(m, b)
}
func (m *SrvUpgradeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvUpgradeReq.Marshal(b, m, deterministic)
}
func (dst *SrvUpgradeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvUpgradeReq.Merge(dst, src)
}
func (m *SrvUpgradeReq) XXX_Size() int {
	return xxx_messageInfo_SrvUpgradeReq.Size(m)
}
func (m *SrvUpgradeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvUpgradeReq.DiscardUnknown(m)
}

var xxx_messageInfo_SrvUpgradeReq proto.InternalMessageInfo

func (m *SrvUpgradeReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SrvUpgradeReq) GetVariable() map[string]string {
	if m != nil {
		return m.Variable
	}
	return nil
}

type AppStatusRes struct {
	Created              *Timestamp        `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	Updated              *Timestamp        `protobuf:"bytes,2,opt,name=updated" json:"updated,omitempty"`
	State                ServiceState      `protobuf:"varint,3,opt,name=state,enum=uv.ServiceState" json:"state,omitempty"`
	Name                 string            `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Plan                 string            `protobuf:"bytes,5,opt,name=plan" json:"plan,omitempty"`
	Config               *AppConfig        `protobuf:"bytes,6,opt,name=config" json:"config,omitempty"`
	EnvironmentVariables map[string]string `protobuf:"bytes,7,rep,name=environmentVariables" json:"environmentVariables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	VcapServices         string            `protobuf:"bytes,8,opt,name=vcapServices" json:"vcapServices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AppStatusRes) Reset()         { *m = AppStatusRes{} }
func (m *AppStatusRes) String() string { return proto.CompactTextString(m) }
func (*AppStatusRes) ProtoMessage()    {}
func (*AppStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{27}
}
func (m *AppStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppStatusRes.Unmarshal(m, b)
}
func (m *AppStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppStatusRes.Marshal(b, m, deterministic)
}
func (dst *AppStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppStatusRes.Merge(dst, src)
}
func (m *AppStatusRes) XXX_Size() int {
	return xxx_messageInfo_AppStatusRes.Size(m)
}
func (m *AppStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AppStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_AppStatusRes proto.InternalMessageInfo

func (m *AppStatusRes) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *AppStatusRes) GetUpdated() *Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *AppStatusRes) GetState() ServiceState {
	if m != nil {
		return m.State
	}
	return ServiceState_Err
}

func (m *AppStatusRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppStatusRes) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *AppStatusRes) GetConfig() *AppConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *AppStatusRes) GetEnvironmentVariables() map[string]string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *AppStatusRes) GetVcapServices() string {
	if m != nil {
		return m.VcapServices
	}
	return ""
}

type AppCreateReq struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Plan                 string     `protobuf:"bytes,2,opt,name=plan" json:"plan,omitempty"`
	Config               *AppConfig `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AppCreateReq) Reset()         { *m = AppCreateReq{} }
func (m *AppCreateReq) String() string { return proto.CompactTextString(m) }
func (*AppCreateReq) ProtoMessage()    {}
func (*AppCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{28}
}
func (m *AppCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppCreateReq.Unmarshal(m, b)
}
func (m *AppCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppCreateReq.Marshal(b, m, deterministic)
}
func (dst *AppCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppCreateReq.Merge(dst, src)
}
func (m *AppCreateReq) XXX_Size() int {
	return xxx_messageInfo_AppCreateReq.Size(m)
}
func (m *AppCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppCreateReq proto.InternalMessageInfo

func (m *AppCreateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppCreateReq) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *AppCreateReq) GetConfig() *AppConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type ConfigSetReg struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Config               *AppConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ConfigSetReg) Reset()         { *m = ConfigSetReg{} }
func (m *ConfigSetReg) String() string { return proto.CompactTextString(m) }
func (*ConfigSetReg) ProtoMessage()    {}
func (*ConfigSetReg) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{29}
}
func (m *ConfigSetReg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigSetReg.Unmarshal(m, b)
}
func (m *ConfigSetReg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigSetReg.Marshal(b, m, deterministic)
}
func (dst *ConfigSetReg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigSetReg.Merge(dst, src)
}
func (m *ConfigSetReg) XXX_Size() int {
	return xxx_messageInfo_ConfigSetReg.Size(m)
}
func (m *ConfigSetReg) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigSetReg.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigSetReg proto.InternalMessageInfo

func (m *ConfigSetReg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigSetReg) GetConfig() *AppConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type AppConfig struct {
	Image    string `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	MinScale uint64 `protobuf:"varint,2,opt,name=minScale" json:"minScale,omitempty"`
	Port     uint64 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	//
	Routes               []string `protobuf:"bytes,4,rep,name=routes" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppConfig) Reset()         { *m = AppConfig{} }
func (m *AppConfig) String() string { return proto.CompactTextString(m) }
func (*AppConfig) ProtoMessage()    {}
func (*AppConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{30}
}
func (m *AppConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppConfig.Unmarshal(m, b)
}
func (m *AppConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppConfig.Marshal(b, m, deterministic)
}
func (dst *AppConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppConfig.Merge(dst, src)
}
func (m *AppConfig) XXX_Size() int {
	return xxx_messageInfo_AppConfig.Size(m)
}
func (m *AppConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AppConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AppConfig proto.InternalMessageInfo

func (m *AppConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *AppConfig) GetMinScale() uint64 {
	if m != nil {
		return m.MinScale
	}
	return 0
}

func (m *AppConfig) GetPort() uint64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AppConfig) GetRoutes() []string {
	if m != nil {
		return m.Routes
	}
	return nil
}

type UnsetReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Variables            []string `protobuf:"bytes,2,rep,name=variables" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsetReq) Reset()         { *m = UnsetReq{} }
func (m *UnsetReq) String() string { return proto.CompactTextString(m) }
func (*UnsetReq) ProtoMessage()    {}
func (*UnsetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{31}
}
func (m *UnsetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsetReq.Unmarshal(m, b)
}
func (m *UnsetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsetReq.Marshal(b, m, deterministic)
}
func (dst *UnsetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsetReq.Merge(dst, src)
}
func (m *UnsetReq) XXX_Size() int {
	return xxx_messageInfo_UnsetReq.Size(m)
}
func (m *UnsetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsetReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnsetReq proto.InternalMessageInfo

func (m *UnsetReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UnsetReq) GetVariables() []string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type ChangePlanReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Plan                 string   `protobuf:"bytes,2,opt,name=plan" json:"plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePlanReq) Reset()         { *m = ChangePlanReq{} }
func (m *ChangePlanReq) String() string { return proto.CompactTextString(m) }
func (*ChangePlanReq) ProtoMessage()    {}
func (*ChangePlanReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{32}
}
func (m *ChangePlanReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePlanReq.Unmarshal(m, b)
}
func (m *ChangePlanReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePlanReq.Marshal(b, m, deterministic)
}
func (dst *ChangePlanReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePlanReq.Merge(dst, src)
}
func (m *ChangePlanReq) XXX_Size() int {
	return xxx_messageInfo_ChangePlanReq.Size(m)
}
func (m *ChangePlanReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePlanReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePlanReq proto.InternalMessageInfo

func (m *ChangePlanReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChangePlanReq) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

type AppAddEnvironmentVariableReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Variables            map[string]string `protobuf:"bytes,2,rep,name=variables" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AppAddEnvironmentVariableReq) Reset()         { *m = AppAddEnvironmentVariableReq{} }
func (m *AppAddEnvironmentVariableReq) String() string { return proto.CompactTextString(m) }
func (*AppAddEnvironmentVariableReq) ProtoMessage()    {}
func (*AppAddEnvironmentVariableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{33}
}
func (m *AppAddEnvironmentVariableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppAddEnvironmentVariableReq.Unmarshal(m, b)
}
func (m *AppAddEnvironmentVariableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppAddEnvironmentVariableReq.Marshal(b, m, deterministic)
}
func (dst *AppAddEnvironmentVariableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppAddEnvironmentVariableReq.Merge(dst, src)
}
func (m *AppAddEnvironmentVariableReq) XXX_Size() int {
	return xxx_messageInfo_AppAddEnvironmentVariableReq.Size(m)
}
func (m *AppAddEnvironmentVariableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppAddEnvironmentVariableReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppAddEnvironmentVariableReq proto.InternalMessageInfo

func (m *AppAddEnvironmentVariableReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppAddEnvironmentVariableReq) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type AppSrvBindReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppSrvBindReq) Reset()         { *m = AppSrvBindReq{} }
func (m *AppSrvBindReq) String() string { return proto.CompactTextString(m) }
func (*AppSrvBindReq) ProtoMessage()    {}
func (*AppSrvBindReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_UV_b85691822795b986, []int{34}
}
func (m *AppSrvBindReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppSrvBindReq.Unmarshal(m, b)
}
func (m *AppSrvBindReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppSrvBindReq.Marshal(b, m, deterministic)
}
func (dst *AppSrvBindReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppSrvBindReq.Merge(dst, src)
}
func (m *AppSrvBindReq) XXX_Size() int {
	return xxx_messageInfo_AppSrvBindReq.Size(m)
}
func (m *AppSrvBindReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppSrvBindReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppSrvBindReq proto.InternalMessageInfo

func (m *AppSrvBindReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppSrvBindReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginReq)(nil), "uv.LoginReq")
	proto.RegisterType((*AuthenticationRes)(nil), "uv.AuthenticationRes")
	proto.RegisterType((*PortforwardRes)(nil), "uv.PortforwardRes")
	proto.RegisterType((*Chunk)(nil), "uv.Chunk")
	proto.RegisterType((*Empty)(nil), "uv.Empty")
	proto.RegisterType((*Identity)(nil), "uv.Identity")
	proto.RegisterType((*AttachIdentity)(nil), "uv.AttachIdentity")
	proto.RegisterType((*ListReq)(nil), "uv.ListReq")
	proto.RegisterType((*Timestamp)(nil), "uv.Timestamp")
	proto.RegisterType((*ListStatusRes)(nil), "uv.ListStatusRes")
	proto.RegisterType((*DomainCreateReq)(nil), "uv.DomainCreateReq")
	proto.RegisterType((*DomainStatusRes)(nil), "uv.DomainStatusRes")
	proto.RegisterType((*VolumeCreateReq)(nil), "uv.VolumeCreateReq")
	proto.RegisterType((*VolumeAttachReq)(nil), "uv.VolumeAttachReq")
	proto.RegisterType((*VolumeSpec)(nil), "uv.VolumeSpec")
	proto.RegisterType((*VolumeStatusRes)(nil), "uv.VolumeStatusRes")
	proto.RegisterType((*ImgStatusRes)(nil), "uv.ImgStatusRes")
	proto.RegisterType((*ImgBuildReq)(nil), "uv.ImgBuildReq")
	proto.RegisterType((*ImgBuildReq_Meta)(nil), "uv.ImgBuildReq.Meta")
	proto.RegisterType((*ImgBuildReq_Chunk)(nil), "uv.ImgBuildReq.Chunk")
	proto.RegisterType((*SettingListReq)(nil), "uv.SettingListReq")
	proto.RegisterType((*SettingInfoReq)(nil), "uv.SettingInfoReq")
	proto.RegisterType((*SettingReq)(nil), "uv.SettingReq")
	proto.RegisterType((*SettingRes)(nil), "uv.SettingRes")
	proto.RegisterType((*ProductRes)(nil), "uv.ProductRes")
	proto.RegisterMapType((map[string]string)(nil), "uv.ProductRes.VariableHintsEntry")
	proto.RegisterType((*Plan)(nil), "uv.Plan")
	proto.RegisterType((*SrvStatusRes)(nil), "uv.SrvStatusRes")
	proto.RegisterMapType((map[string]string)(nil), "uv.SrvStatusRes.VariableEntry")
	proto.RegisterType((*SrvCreateReq)(nil), "uv.SrvCreateReq")
	proto.RegisterMapType((map[string]string)(nil), "uv.SrvCreateReq.VariableEntry")
	proto.RegisterType((*SrvUpgradeReq)(nil), "uv.SrvUpgradeReq")
	proto.RegisterMapType((map[string]string)(nil), "uv.SrvUpgradeReq.VariableEntry")
	proto.RegisterType((*AppStatusRes)(nil), "uv.AppStatusRes")
	proto.RegisterMapType((map[string]string)(nil), "uv.AppStatusRes.EnvironmentVariablesEntry")
	proto.RegisterType((*AppCreateReq)(nil), "uv.AppCreateReq")
	proto.RegisterType((*ConfigSetReg)(nil), "uv.ConfigSetReg")
	proto.RegisterType((*AppConfig)(nil), "uv.AppConfig")
	proto.RegisterType((*UnsetReq)(nil), "uv.UnsetReq")
	proto.RegisterType((*ChangePlanReq)(nil), "uv.ChangePlanReq")
	proto.RegisterType((*AppAddEnvironmentVariableReq)(nil), "uv.AppAddEnvironmentVariableReq")
	proto.RegisterMapType((map[string]string)(nil), "uv.AppAddEnvironmentVariableReq.VariablesEntry")
	proto.RegisterType((*AppSrvBindReq)(nil), "uv.AppSrvBindReq")
	proto.RegisterEnum("uv.ServiceState", ServiceState_name, ServiceState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UV service

type UVClient interface {
	// Authentication
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*AuthenticationRes, error)
	Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	// Domain
	DomainList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error)
	DomainInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*DomainStatusRes, error)
	DomainCreate(ctx context.Context, in *DomainCreateReq, opts ...grpc.CallOption) (*DomainStatusRes, error)
	DomainDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	// Volume
	VolumeSpecList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error)
	VolumeSpecInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*VolumeSpec, error)
	VolumeList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error)
	VolumeInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*VolumeStatusRes, error)
	VolumeCreate(ctx context.Context, in *VolumeCreateReq, opts ...grpc.CallOption) (*VolumeStatusRes, error)
	VolumeDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	// Image
	ImgBuild(ctx context.Context, opts ...grpc.CallOption) (UV_ImgBuildClient, error)
	ImgList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error)
	ImgDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	// Product
	PrdList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error)
	PrdInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*ProductRes, error)
	// Settig
	SetList(ctx context.Context, in *SettingListReq, opts ...grpc.CallOption) (*ListStatusRes, error)
	SetInfo(ctx context.Context, in *SettingInfoReq, opts ...grpc.CallOption) (*SettingRes, error)
	SetAdd(ctx context.Context, in *SettingReq, opts ...grpc.CallOption) (*SettingRes, error)
	SetUpdate(ctx context.Context, in *SettingReq, opts ...grpc.CallOption) (*SettingRes, error)
	SetDelete(ctx context.Context, in *SettingInfoReq, opts ...grpc.CallOption) (*Empty, error)
	// Service
	SrvList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error)
	SrvCreate(ctx context.Context, in *SrvCreateReq, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvChangePlan(ctx context.Context, in *ChangePlanReq, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvPortforward(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*PortforwardRes, error)
	SrvStart(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvStop(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error)
	SrvDestroy(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	SrvInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error)
	// Application
	AppList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error)
	AppCreate(ctx context.Context, in *AppCreateReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	// TODO maybe splits to some functions
	AppConfigSet(ctx context.Context, in *ConfigSetReg, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppConfigUnset(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppChangePlan(ctx context.Context, in *ChangePlanReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppAddEnvironmentVariable(ctx context.Context, in *AppAddEnvironmentVariableReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppRemoveEnvironmentVariable(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	// Reserved for later
	// rpc AppPortforward (Identity) returns (PortforwardRes) { }
	AppReset(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppAttachVolume(ctx context.Context, in *VolumeAttachReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppDetachVolume(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppListDomains(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*ListStatusRes, error)
	AppStatusDomain(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*DomainStatusRes, error)
	AppAttachDomain(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppDetachDomain(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppStop(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppStart(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppDestroy(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error)
	AppInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppLog(ctx context.Context, in *Identity, opts ...grpc.CallOption) (UV_AppLogClient, error)
	AppSrvBind(ctx context.Context, in *AppSrvBindReq, opts ...grpc.CallOption) (*AppStatusRes, error)
	AppSrvUnBind(ctx context.Context, in *AppSrvBindReq, opts ...grpc.CallOption) (*AppStatusRes, error)
}

type uVClient struct {
	cc *grpc.ClientConn
}

func NewUVClient(cc *grpc.ClientConn) UVClient {
	return &uVClient{cc}
}

func (c *uVClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*AuthenticationRes, error) {
	out := new(AuthenticationRes)
	err := grpc.Invoke(ctx, "/uv.UV/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/uv.UV/Logout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) DomainList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/DomainList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) DomainInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*DomainStatusRes, error) {
	out := new(DomainStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/DomainInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) DomainCreate(ctx context.Context, in *DomainCreateReq, opts ...grpc.CallOption) (*DomainStatusRes, error) {
	out := new(DomainStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/DomainCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) DomainDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/uv.UV/DomainDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) VolumeSpecList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/VolumeSpecList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) VolumeSpecInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*VolumeSpec, error) {
	out := new(VolumeSpec)
	err := grpc.Invoke(ctx, "/uv.UV/VolumeSpecInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) VolumeList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/VolumeList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) VolumeInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*VolumeStatusRes, error) {
	out := new(VolumeStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/VolumeInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) VolumeCreate(ctx context.Context, in *VolumeCreateReq, opts ...grpc.CallOption) (*VolumeStatusRes, error) {
	out := new(VolumeStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/VolumeCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) VolumeDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/uv.UV/VolumeDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) ImgBuild(ctx context.Context, opts ...grpc.CallOption) (UV_ImgBuildClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_UV_serviceDesc.Streams[0], c.cc, "/uv.UV/ImgBuild", opts...)
	if err != nil {
		return nil, err
	}
	x := &uVImgBuildClient{stream}
	return x, nil
}

type UV_ImgBuildClient interface {
	Send(*ImgBuildReq) error
	CloseAndRecv() (*ImgStatusRes, error)
	grpc.ClientStream
}

type uVImgBuildClient struct {
	grpc.ClientStream
}

func (x *uVImgBuildClient) Send(m *ImgBuildReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *uVImgBuildClient) CloseAndRecv() (*ImgStatusRes, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ImgStatusRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *uVClient) ImgList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/ImgList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) ImgDelete(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/uv.UV/ImgDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) PrdList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/PrdList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) PrdInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*ProductRes, error) {
	out := new(ProductRes)
	err := grpc.Invoke(ctx, "/uv.UV/PrdInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SetList(ctx context.Context, in *SettingListReq, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/SetList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SetInfo(ctx context.Context, in *SettingInfoReq, opts ...grpc.CallOption) (*SettingRes, error) {
	out := new(SettingRes)
	err := grpc.Invoke(ctx, "/uv.UV/SetInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SetAdd(ctx context.Context, in *SettingReq, opts ...grpc.CallOption) (*SettingRes, error) {
	out := new(SettingRes)
	err := grpc.Invoke(ctx, "/uv.UV/SetAdd", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SetUpdate(ctx context.Context, in *SettingReq, opts ...grpc.CallOption) (*SettingRes, error) {
	out := new(SettingRes)
	err := grpc.Invoke(ctx, "/uv.UV/SetUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SetDelete(ctx context.Context, in *SettingInfoReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/uv.UV/SetDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SrvList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/SrvList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SrvCreate(ctx context.Context, in *SrvCreateReq, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/SrvCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SrvChangePlan(ctx context.Context, in *ChangePlanReq, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/SrvChangePlan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SrvPortforward(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*PortforwardRes, error) {
	out := new(PortforwardRes)
	err := grpc.Invoke(ctx, "/uv.UV/SrvPortforward", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SrvStart(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/SrvStart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SrvStop(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/SrvStop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SrvDestroy(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/uv.UV/SrvDestroy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) SrvInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*SrvStatusRes, error) {
	out := new(SrvStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/SrvInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppCreate(ctx context.Context, in *AppCreateReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppConfigSet(ctx context.Context, in *ConfigSetReg, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppConfigSet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppConfigUnset(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppConfigUnset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppChangePlan(ctx context.Context, in *ChangePlanReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppChangePlan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppAddEnvironmentVariable(ctx context.Context, in *AppAddEnvironmentVariableReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppAddEnvironmentVariable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppRemoveEnvironmentVariable(ctx context.Context, in *UnsetReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppRemoveEnvironmentVariable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppReset(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppReset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppAttachVolume(ctx context.Context, in *VolumeAttachReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppAttachVolume", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppDetachVolume(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppDetachVolume", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppListDomains(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*ListStatusRes, error) {
	out := new(ListStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppListDomains", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppStatusDomain(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*DomainStatusRes, error) {
	out := new(DomainStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppStatusDomain", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppAttachDomain(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppAttachDomain", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppDetachDomain(ctx context.Context, in *AttachIdentity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppDetachDomain", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppStop(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppStop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppStart(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppStart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppDestroy(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/uv.UV/AppDestroy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppLog(ctx context.Context, in *Identity, opts ...grpc.CallOption) (UV_AppLogClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_UV_serviceDesc.Streams[1], c.cc, "/uv.UV/AppLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &uVAppLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UV_AppLogClient interface {
	Recv() (*Chunk, error)
	grpc.ClientStream
}

type uVAppLogClient struct {
	grpc.ClientStream
}

func (x *uVAppLogClient) Recv() (*Chunk, error) {
	m := new(Chunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *uVClient) AppSrvBind(ctx context.Context, in *AppSrvBindReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppSrvBind", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uVClient) AppSrvUnBind(ctx context.Context, in *AppSrvBindReq, opts ...grpc.CallOption) (*AppStatusRes, error) {
	out := new(AppStatusRes)
	err := grpc.Invoke(ctx, "/uv.UV/AppSrvUnBind", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UV service

type UVServer interface {
	// Authentication
	Login(context.Context, *LoginReq) (*AuthenticationRes, error)
	Logout(context.Context, *Empty) (*Empty, error)
	// Domain
	DomainList(context.Context, *ListReq) (*ListStatusRes, error)
	DomainInfo(context.Context, *Identity) (*DomainStatusRes, error)
	DomainCreate(context.Context, *DomainCreateReq) (*DomainStatusRes, error)
	DomainDelete(context.Context, *Identity) (*Empty, error)
	// Volume
	VolumeSpecList(context.Context, *ListReq) (*ListStatusRes, error)
	VolumeSpecInfo(context.Context, *Identity) (*VolumeSpec, error)
	VolumeList(context.Context, *ListReq) (*ListStatusRes, error)
	VolumeInfo(context.Context, *Identity) (*VolumeStatusRes, error)
	VolumeCreate(context.Context, *VolumeCreateReq) (*VolumeStatusRes, error)
	VolumeDelete(context.Context, *Identity) (*Empty, error)
	// Image
	ImgBuild(UV_ImgBuildServer) error
	ImgList(context.Context, *ListReq) (*ListStatusRes, error)
	ImgDelete(context.Context, *Identity) (*Empty, error)
	// Product
	PrdList(context.Context, *ListReq) (*ListStatusRes, error)
	PrdInfo(context.Context, *Identity) (*ProductRes, error)
	// Settig
	SetList(context.Context, *SettingListReq) (*ListStatusRes, error)
	SetInfo(context.Context, *SettingInfoReq) (*SettingRes, error)
	SetAdd(context.Context, *SettingReq) (*SettingRes, error)
	SetUpdate(context.Context, *SettingReq) (*SettingRes, error)
	SetDelete(context.Context, *SettingInfoReq) (*Empty, error)
	// Service
	SrvList(context.Context, *ListReq) (*ListStatusRes, error)
	SrvCreate(context.Context, *SrvCreateReq) (*SrvStatusRes, error)
	SrvChangePlan(context.Context, *ChangePlanReq) (*SrvStatusRes, error)
	SrvPortforward(context.Context, *Identity) (*PortforwardRes, error)
	SrvStart(context.Context, *Identity) (*SrvStatusRes, error)
	SrvStop(context.Context, *Identity) (*SrvStatusRes, error)
	SrvDestroy(context.Context, *Identity) (*Empty, error)
	SrvInfo(context.Context, *Identity) (*SrvStatusRes, error)
	// Application
	AppList(context.Context, *ListReq) (*ListStatusRes, error)
	AppCreate(context.Context, *AppCreateReq) (*AppStatusRes, error)
	// TODO maybe splits to some functions
	AppConfigSet(context.Context, *ConfigSetReg) (*AppStatusRes, error)
	AppConfigUnset(context.Context, *UnsetReq) (*AppStatusRes, error)
	AppChangePlan(context.Context, *ChangePlanReq) (*AppStatusRes, error)
	AppAddEnvironmentVariable(context.Context, *AppAddEnvironmentVariableReq) (*AppStatusRes, error)
	AppRemoveEnvironmentVariable(context.Context, *UnsetReq) (*AppStatusRes, error)
	// Reserved for later
	// rpc AppPortforward (Identity) returns (PortforwardRes) { }
	AppReset(context.Context, *Identity) (*AppStatusRes, error)
	AppAttachVolume(context.Context, *VolumeAttachReq) (*AppStatusRes, error)
	AppDetachVolume(context.Context, *AttachIdentity) (*AppStatusRes, error)
	AppListDomains(context.Context, *AttachIdentity) (*ListStatusRes, error)
	AppStatusDomain(context.Context, *AttachIdentity) (*DomainStatusRes, error)
	AppAttachDomain(context.Context, *AttachIdentity) (*AppStatusRes, error)
	AppDetachDomain(context.Context, *AttachIdentity) (*AppStatusRes, error)
	AppStop(context.Context, *Identity) (*AppStatusRes, error)
	AppStart(context.Context, *Identity) (*AppStatusRes, error)
	AppDestroy(context.Context, *Identity) (*Empty, error)
	AppInfo(context.Context, *Identity) (*AppStatusRes, error)
	AppLog(*Identity, UV_AppLogServer) error
	AppSrvBind(context.Context, *AppSrvBindReq) (*AppStatusRes, error)
	AppSrvUnBind(context.Context, *AppSrvBindReq) (*AppStatusRes, error)
}

func RegisterUVServer(s *grpc.Server, srv UVServer) {
	s.RegisterService(&_UV_serviceDesc, srv)
}

func _UV_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).Logout(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_DomainList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).DomainList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/DomainList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).DomainList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_DomainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).DomainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/DomainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).DomainInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_DomainCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).DomainCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/DomainCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).DomainCreate(ctx, req.(*DomainCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_DomainDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).DomainDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/DomainDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).DomainDelete(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_VolumeSpecList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).VolumeSpecList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/VolumeSpecList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).VolumeSpecList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_VolumeSpecInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).VolumeSpecInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/VolumeSpecInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).VolumeSpecInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_VolumeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).VolumeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/VolumeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).VolumeList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_VolumeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).VolumeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/VolumeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).VolumeInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_VolumeCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).VolumeCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/VolumeCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).VolumeCreate(ctx, req.(*VolumeCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_VolumeDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).VolumeDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/VolumeDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).VolumeDelete(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_ImgBuild_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UVServer).ImgBuild(&uVImgBuildServer{stream})
}

type UV_ImgBuildServer interface {
	SendAndClose(*ImgStatusRes) error
	Recv() (*ImgBuildReq, error)
	grpc.ServerStream
}

type uVImgBuildServer struct {
	grpc.ServerStream
}

func (x *uVImgBuildServer) SendAndClose(m *ImgStatusRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *uVImgBuildServer) Recv() (*ImgBuildReq, error) {
	m := new(ImgBuildReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _UV_ImgList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).ImgList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/ImgList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).ImgList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_ImgDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).ImgDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/ImgDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).ImgDelete(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_PrdList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).PrdList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/PrdList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).PrdList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_PrdInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).PrdInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/PrdInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).PrdInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettingListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SetList(ctx, req.(*SettingListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettingInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SetInfo(ctx, req.(*SettingInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SetAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SetAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SetAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SetAdd(ctx, req.(*SettingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SetUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SetUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SetUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SetUpdate(ctx, req.(*SettingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SetDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettingInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SetDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SetDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SetDelete(ctx, req.(*SettingInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SrvList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SrvList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SrvList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SrvList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SrvCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SrvCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SrvCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SrvCreate(ctx, req.(*SrvCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SrvChangePlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SrvChangePlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SrvChangePlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SrvChangePlan(ctx, req.(*ChangePlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SrvPortforward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SrvPortforward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SrvPortforward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SrvPortforward(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SrvStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SrvStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SrvStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SrvStart(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SrvStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SrvStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SrvStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SrvStop(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SrvDestroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SrvDestroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SrvDestroy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SrvDestroy(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_SrvInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).SrvInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/SrvInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).SrvInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppCreate(ctx, req.(*AppCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppConfigSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigSetReg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppConfigSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppConfigSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppConfigSet(ctx, req.(*ConfigSetReg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppConfigUnset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppConfigUnset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppConfigUnset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppConfigUnset(ctx, req.(*UnsetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppChangePlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppChangePlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppChangePlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppChangePlan(ctx, req.(*ChangePlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppAddEnvironmentVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppAddEnvironmentVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppAddEnvironmentVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppAddEnvironmentVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppAddEnvironmentVariable(ctx, req.(*AppAddEnvironmentVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppRemoveEnvironmentVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppRemoveEnvironmentVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppRemoveEnvironmentVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppRemoveEnvironmentVariable(ctx, req.(*UnsetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppReset(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppAttachVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeAttachReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppAttachVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppAttachVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppAttachVolume(ctx, req.(*VolumeAttachReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppDetachVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppDetachVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppDetachVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppDetachVolume(ctx, req.(*AttachIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppListDomains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppListDomains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppListDomains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppListDomains(ctx, req.(*AttachIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppStatusDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppStatusDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppStatusDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppStatusDomain(ctx, req.(*AttachIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppAttachDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppAttachDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppAttachDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppAttachDomain(ctx, req.(*AttachIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppDetachDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppDetachDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppDetachDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppDetachDomain(ctx, req.(*AttachIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppStop(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppStart(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppDestroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppDestroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppDestroy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppDestroy(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Identity)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UVServer).AppLog(m, &uVAppLogServer{stream})
}

type UV_AppLogServer interface {
	Send(*Chunk) error
	grpc.ServerStream
}

type uVAppLogServer struct {
	grpc.ServerStream
}

func (x *uVAppLogServer) Send(m *Chunk) error {
	return x.ServerStream.SendMsg(m)
}

func _UV_AppSrvBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppSrvBindReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppSrvBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppSrvBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppSrvBind(ctx, req.(*AppSrvBindReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UV_AppSrvUnBind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppSrvBindReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UVServer).AppSrvUnBind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uv.UV/AppSrvUnBind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UVServer).AppSrvUnBind(ctx, req.(*AppSrvBindReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UV_serviceDesc = grpc.ServiceDesc{
	ServiceName: "uv.UV",
	HandlerType: (*UVServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _UV_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _UV_Logout_Handler,
		},
		{
			MethodName: "DomainList",
			Handler:    _UV_DomainList_Handler,
		},
		{
			MethodName: "DomainInfo",
			Handler:    _UV_DomainInfo_Handler,
		},
		{
			MethodName: "DomainCreate",
			Handler:    _UV_DomainCreate_Handler,
		},
		{
			MethodName: "DomainDelete",
			Handler:    _UV_DomainDelete_Handler,
		},
		{
			MethodName: "VolumeSpecList",
			Handler:    _UV_VolumeSpecList_Handler,
		},
		{
			MethodName: "VolumeSpecInfo",
			Handler:    _UV_VolumeSpecInfo_Handler,
		},
		{
			MethodName: "VolumeList",
			Handler:    _UV_VolumeList_Handler,
		},
		{
			MethodName: "VolumeInfo",
			Handler:    _UV_VolumeInfo_Handler,
		},
		{
			MethodName: "VolumeCreate",
			Handler:    _UV_VolumeCreate_Handler,
		},
		{
			MethodName: "VolumeDelete",
			Handler:    _UV_VolumeDelete_Handler,
		},
		{
			MethodName: "ImgList",
			Handler:    _UV_ImgList_Handler,
		},
		{
			MethodName: "ImgDelete",
			Handler:    _UV_ImgDelete_Handler,
		},
		{
			MethodName: "PrdList",
			Handler:    _UV_PrdList_Handler,
		},
		{
			MethodName: "PrdInfo",
			Handler:    _UV_PrdInfo_Handler,
		},
		{
			MethodName: "SetList",
			Handler:    _UV_SetList_Handler,
		},
		{
			MethodName: "SetInfo",
			Handler:    _UV_SetInfo_Handler,
		},
		{
			MethodName: "SetAdd",
			Handler:    _UV_SetAdd_Handler,
		},
		{
			MethodName: "SetUpdate",
			Handler:    _UV_SetUpdate_Handler,
		},
		{
			MethodName: "SetDelete",
			Handler:    _UV_SetDelete_Handler,
		},
		{
			MethodName: "SrvList",
			Handler:    _UV_SrvList_Handler,
		},
		{
			MethodName: "SrvCreate",
			Handler:    _UV_SrvCreate_Handler,
		},
		{
			MethodName: "SrvChangePlan",
			Handler:    _UV_SrvChangePlan_Handler,
		},
		{
			MethodName: "SrvPortforward",
			Handler:    _UV_SrvPortforward_Handler,
		},
		{
			MethodName: "SrvStart",
			Handler:    _UV_SrvStart_Handler,
		},
		{
			MethodName: "SrvStop",
			Handler:    _UV_SrvStop_Handler,
		},
		{
			MethodName: "SrvDestroy",
			Handler:    _UV_SrvDestroy_Handler,
		},
		{
			MethodName: "SrvInfo",
			Handler:    _UV_SrvInfo_Handler,
		},
		{
			MethodName: "AppList",
			Handler:    _UV_AppList_Handler,
		},
		{
			MethodName: "AppCreate",
			Handler:    _UV_AppCreate_Handler,
		},
		{
			MethodName: "AppConfigSet",
			Handler:    _UV_AppConfigSet_Handler,
		},
		{
			MethodName: "AppConfigUnset",
			Handler:    _UV_AppConfigUnset_Handler,
		},
		{
			MethodName: "AppChangePlan",
			Handler:    _UV_AppChangePlan_Handler,
		},
		{
			MethodName: "AppAddEnvironmentVariable",
			Handler:    _UV_AppAddEnvironmentVariable_Handler,
		},
		{
			MethodName: "AppRemoveEnvironmentVariable",
			Handler:    _UV_AppRemoveEnvironmentVariable_Handler,
		},
		{
			MethodName: "AppReset",
			Handler:    _UV_AppReset_Handler,
		},
		{
			MethodName: "AppAttachVolume",
			Handler:    _UV_AppAttachVolume_Handler,
		},
		{
			MethodName: "AppDetachVolume",
			Handler:    _UV_AppDetachVolume_Handler,
		},
		{
			MethodName: "AppListDomains",
			Handler:    _UV_AppListDomains_Handler,
		},
		{
			MethodName: "AppStatusDomain",
			Handler:    _UV_AppStatusDomain_Handler,
		},
		{
			MethodName: "AppAttachDomain",
			Handler:    _UV_AppAttachDomain_Handler,
		},
		{
			MethodName: "AppDetachDomain",
			Handler:    _UV_AppDetachDomain_Handler,
		},
		{
			MethodName: "AppStop",
			Handler:    _UV_AppStop_Handler,
		},
		{
			MethodName: "AppStart",
			Handler:    _UV_AppStart_Handler,
		},
		{
			MethodName: "AppDestroy",
			Handler:    _UV_AppDestroy_Handler,
		},
		{
			MethodName: "AppInfo",
			Handler:    _UV_AppInfo_Handler,
		},
		{
			MethodName: "AppSrvBind",
			Handler:    _UV_AppSrvBind_Handler,
		},
		{
			MethodName: "AppSrvUnBind",
			Handler:    _UV_AppSrvUnBind_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ImgBuild",
			Handler:       _UV_ImgBuild_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "AppLog",
			Handler:       _UV_AppLog_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "UV.proto",
}

func init() { proto.RegisterFile("UV.proto", fileDescriptor_UV_b85691822795b986) }

var fileDescriptor_UV_b85691822795b986 = []byte{
	// 1867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xdd, 0x6e, 0x24, 0x47,
	0x15, 0x9e, 0x9f, 0x1e, 0xcf, 0xcc, 0xf1, 0x78, 0x3c, 0x29, 0x16, 0xe4, 0x8c, 0x96, 0x8d, 0x29,
	0x29, 0xd9, 0x9f, 0x24, 0x4e, 0xe2, 0xc0, 0x26, 0xfb, 0x83, 0x94, 0xd9, 0xf5, 0x0a, 0x1b, 0x6d,
	0x90, 0xe9, 0x8e, 0x57, 0x02, 0x09, 0x50, 0xa7, 0xbb, 0x3c, 0x6e, 0x79, 0xba, 0xab, 0xa9, 0xae,
	0xe9, 0xac, 0x79, 0x06, 0x5e, 0x81, 0x3b, 0xde, 0x82, 0x0b, 0xc4, 0x0d, 0x77, 0x5c, 0xf0, 0x1e,
	0x3c, 0x04, 0xaa, 0x53, 0xd5, 0x3f, 0xd3, 0xee, 0xb6, 0xc7, 0xc0, 0xae, 0xc4, 0x5d, 0x9d, 0xea,
	0xf3, 0x9d, 0x3a, 0x7f, 0x55, 0xe7, 0x9c, 0x19, 0x18, 0x9c, 0xbc, 0xda, 0x8b, 0x05, 0x97, 0x9c,
	0x74, 0x96, 0x29, 0x7d, 0x0a, 0x83, 0x97, 0x7c, 0x1e, 0x44, 0x36, 0xfb, 0x3d, 0xb9, 0x05, 0x3d,
	0x16, 0xba, 0xc1, 0x62, 0xa7, 0xbd, 0xdb, 0xbe, 0x37, 0xb4, 0x35, 0x41, 0xa6, 0x30, 0x88, 0xdd,
	0x24, 0xf9, 0x8e, 0x0b, 0x7f, 0xa7, 0x83, 0x1f, 0x72, 0x9a, 0xde, 0x87, 0x77, 0x66, 0x4b, 0x79,
	0xc6, 0x22, 0x19, 0x78, 0xae, 0x0c, 0x78, 0x64, 0xb3, 0x44, 0x89, 0x91, 0xfc, 0x9c, 0x45, 0x99,
	0x18, 0x24, 0xe8, 0x02, 0xc6, 0xc7, 0x5c, 0xc8, 0x53, 0x2e, 0xbe, 0x73, 0x85, 0xaf, 0xf8, 0x26,
	0xd0, 0x4d, 0x52, 0xcf, 0x70, 0xa9, 0xa5, 0x42, 0xc6, 0x5c, 0xc8, 0x64, 0xa7, 0xb3, 0xdb, 0x55,
	0x48, 0x24, 0x0a, 0x79, 0xdd, 0xdd, 0xf6, 0xbd, 0x91, 0x91, 0x47, 0x6e, 0xc3, 0x30, 0x16, 0xfc,
	0xf5, 0xc5, 0x21, 0x4f, 0xe4, 0x8e, 0x85, 0x32, 0x8a, 0x0d, 0xfa, 0x43, 0xe8, 0x3d, 0x3f, 0x5b,
	0x46, 0xe7, 0x0a, 0xec, 0xa9, 0x05, 0x1e, 0x33, 0xb2, 0x35, 0x41, 0xfb, 0xd0, 0x7b, 0x11, 0xc6,
	0xf2, 0x82, 0xde, 0x81, 0xc1, 0x91, 0xaf, 0xd4, 0x97, 0x17, 0x84, 0x80, 0x15, 0xb9, 0x21, 0x33,
	0x0a, 0xe1, 0x9a, 0x1e, 0xc0, 0x78, 0x26, 0xa5, 0xeb, 0x9d, 0x5d, 0xc5, 0x45, 0xee, 0x00, 0xb8,
	0xc8, 0x15, 0xb2, 0x48, 0x1a, 0x27, 0x95, 0x76, 0xe8, 0x7b, 0xd0, 0x7f, 0x19, 0x24, 0xd2, 0xf8,
	0x38, 0x88, 0x7c, 0xf6, 0x1a, 0xf1, 0x3d, 0x5b, 0x13, 0xf4, 0x09, 0x0c, 0xbf, 0x09, 0x42, 0x96,
	0x48, 0x37, 0x8c, 0xc9, 0x0e, 0xf4, 0x13, 0xe6, 0xf1, 0xc8, 0x4f, 0x90, 0xa9, 0x6b, 0x67, 0xa4,
	0x02, 0x47, 0x6e, 0xc4, 0x13, 0x3c, 0xa2, 0x67, 0x6b, 0x82, 0x9e, 0xc3, 0x96, 0x92, 0xee, 0x48,
	0x57, 0x2e, 0x13, 0x13, 0x00, 0xa5, 0x96, 0x82, 0xa3, 0x1b, 0x91, 0x40, 0x4f, 0xf0, 0xa5, 0xd1,
	0xaf, 0x67, 0x6b, 0x02, 0xcd, 0x61, 0xaf, 0x25, 0xfa, 0xb6, 0x67, 0xe3, 0x1a, 0x23, 0x2e, 0x58,
	0x1a, 0xf0, 0x65, 0x82, 0x9e, 0xed, 0xd9, 0x39, 0x4d, 0x9f, 0xc0, 0xf6, 0x01, 0x0f, 0xdd, 0x20,
	0x7a, 0x2e, 0x98, 0x2b, 0x99, 0x32, 0xe9, 0x07, 0xb0, 0xe1, 0xe3, 0x96, 0xf1, 0x89, 0xa1, 0x54,
	0x7c, 0xe5, 0x42, 0xeb, 0x3a, 0xb0, 0xd5, 0x92, 0xfe, 0xad, 0x9d, 0xa1, 0x0b, 0x65, 0xef, 0x42,
	0xdf, 0x43, 0x51, 0x3e, 0xc2, 0x37, 0xf7, 0xb7, 0xf6, 0x96, 0xe9, 0x5e, 0xee, 0x0d, 0x3b, 0xfb,
	0xaa, 0x18, 0x97, 0xb1, 0x8f, 0x8c, 0x9d, 0x5a, 0x46, 0xf3, 0x35, 0x8f, 0x50, 0xb7, 0x14, 0xa1,
	0x42, 0x47, 0xab, 0x4e, 0xc7, 0x9e, 0xce, 0x41, 0xb9, 0x48, 0x8a, 0x58, 0x32, 0xff, 0x1b, 0xbe,
	0xb3, 0x51, 0x8e, 0xa5, 0xda, 0xa1, 0x8f, 0x60, 0xfb, 0x15, 0x5f, 0x2c, 0x43, 0x56, 0x38, 0xa0,
	0x2e, 0x25, 0x08, 0x58, 0x49, 0xcc, 0x3c, 0x93, 0x0c, 0xb8, 0xa6, 0x5e, 0x06, 0xd5, 0x29, 0xd5,
	0x04, 0xbd, 0x26, 0x9b, 0x54, 0xe6, 0x87, 0x2a, 0x76, 0xc7, 0xae, 0x3c, 0x33, 0x46, 0x16, 0x1b,
	0xf4, 0xe7, 0x00, 0xfa, 0x10, 0x27, 0x66, 0x5e, 0xad, 0x7c, 0x95, 0x08, 0x0b, 0x37, 0x49, 0x8c,
	0x68, 0x4d, 0xa0, 0xc2, 0xc1, 0x1f, 0x98, 0xf1, 0x0f, 0xae, 0xe9, 0x5f, 0xda, 0x99, 0xc6, 0x6f,
	0x3b, 0x5e, 0xd4, 0xb8, 0xcf, 0x42, 0xe4, 0x58, 0x21, 0x0b, 0xab, 0xb4, 0x3b, 0x2b, 0x91, 0xea,
	0x5d, 0x8a, 0x94, 0x84, 0xd1, 0x51, 0x38, 0x7f, 0xcb, 0x9a, 0xd3, 0xbf, 0xb7, 0x61, 0xf3, 0x28,
	0x9c, 0x3f, 0x5b, 0x06, 0x0b, 0x5f, 0x45, 0xf8, 0x01, 0x58, 0x21, 0x93, 0xae, 0x39, 0xf2, 0x96,
	0x92, 0x54, 0xfa, 0xbc, 0xf7, 0x35, 0x93, 0xee, 0x61, 0xcb, 0x46, 0x1e, 0xf2, 0x71, 0xf6, 0x58,
	0xe9, 0x63, 0xbf, 0x5f, 0x65, 0xc6, 0x27, 0xed, 0xb0, 0x65, 0x5e, 0xb1, 0xe9, 0x14, 0x2c, 0x05,
	0xaf, 0x0b, 0xf2, 0xf4, 0x8b, 0xec, 0x01, 0x24, 0x60, 0xf9, 0xae, 0x39, 0x7f, 0x64, 0xe3, 0x1a,
	0x2f, 0x38, 0x4f, 0x02, 0xf5, 0x60, 0xe3, 0x51, 0x5d, 0x3b, 0xa7, 0x9f, 0xf5, 0xa1, 0x97, 0xba,
	0x8b, 0x25, 0xa3, 0x5f, 0xc2, 0xd8, 0x61, 0x52, 0x06, 0xd1, 0xfc, 0xca, 0xb7, 0x4b, 0x5d, 0x21,
	0x37, 0x8e, 0x4d, 0x32, 0xa9, 0x25, 0x7d, 0x98, 0x23, 0x8f, 0xa2, 0x53, 0xde, 0x94, 0xe6, 0x97,
	0x71, 0xbf, 0x06, 0x30, 0xb8, 0xb5, 0x31, 0x8a, 0x2b, 0x2e, 0xee, 0x01, 0xae, 0xd5, 0xde, 0x69,
	0xb0, 0xd0, 0xa9, 0x3c, 0xb2, 0x71, 0xbd, 0x22, 0x3b, 0xf9, 0x1f, 0xcb, 0xfe, 0x57, 0x1b, 0xe0,
	0x58, 0x70, 0x7f, 0xe9, 0xc9, 0x26, 0xe1, 0xbb, 0xb0, 0xe9, 0xb3, 0xc4, 0x13, 0x41, 0x9c, 0x3b,
	0x7d, 0x68, 0x97, 0xb7, 0xc8, 0x6d, 0xb0, 0xe2, 0x85, 0xab, 0x8a, 0x5c, 0xf7, 0xde, 0xe6, 0xfe,
	0x40, 0x85, 0xfe, 0x78, 0xe1, 0x46, 0x36, 0xee, 0x92, 0x43, 0x18, 0xa7, 0xae, 0x08, 0xdc, 0x6f,
	0x17, 0xec, 0x77, 0x67, 0x41, 0x24, 0xd5, 0xc3, 0xac, 0xf8, 0x7e, 0x84, 0x7c, 0xf9, 0xd9, 0x7b,
	0xaf, 0x0c, 0xd3, 0xa1, 0xe2, 0x79, 0x11, 0x49, 0x71, 0x61, 0x6f, 0xa5, 0xe5, 0xbd, 0xe9, 0x57,
	0x40, 0x2e, 0x33, 0x29, 0xe3, 0xcf, 0xd9, 0x45, 0x56, 0x8b, 0xcf, 0xd9, 0x85, 0x0a, 0x36, 0xe6,
	0x41, 0xf6, 0x4a, 0x20, 0xf1, 0xb8, 0xf3, 0x65, 0x9b, 0xfa, 0x60, 0x29, 0xcd, 0xfe, 0x43, 0x3b,
	0x55, 0x8d, 0x17, 0x81, 0xa7, 0x2f, 0x8d, 0x65, 0x6b, 0x42, 0x9d, 0xcf, 0x4f, 0x4f, 0xd1, 0xab,
	0x96, 0xad, 0x96, 0xf4, 0x1f, 0x1d, 0x18, 0x39, 0x22, 0x7d, 0x93, 0xd7, 0xf7, 0x03, 0xe8, 0x25,
	0xd2, 0x95, 0x5a, 0x95, 0xf1, 0xfe, 0x44, 0xb1, 0x39, 0x4c, 0xa4, 0x81, 0x87, 0xef, 0x1d, 0xb3,
	0xf5, 0xe7, 0xdc, 0x50, 0x6b, 0xf5, 0x7d, 0xc7, 0x70, 0xf5, 0x4c, 0x6e, 0x28, 0x87, 0x50, 0x18,
	0xa5, 0x9e, 0x1b, 0x1b, 0x11, 0x89, 0x29, 0x1e, 0x2b, 0x7b, 0xe4, 0x31, 0x0c, 0xb2, 0x78, 0xec,
	0xf4, 0x31, 0x84, 0x77, 0xf0, 0xd8, 0x92, 0xa5, 0x79, 0x10, 0x75, 0xfc, 0x72, 0xfe, 0xe9, 0x13,
	0xd8, 0x5a, 0xf9, 0x74, 0xa3, 0xa8, 0xfd, 0xb3, 0x8d, 0xfe, 0x2c, 0xaa, 0xd6, 0x2e, 0x6c, 0xc6,
	0x3a, 0x71, 0x7e, 0x51, 0x44, 0xb1, 0xbc, 0x95, 0xdb, 0xdd, 0xa9, 0xb1, 0xbb, 0x5b, 0xb2, 0xbb,
	0x6c, 0x93, 0xb5, 0x62, 0x53, 0x7e, 0xda, 0x9b, 0xb1, 0xe9, 0x4f, 0x6d, 0xd8, 0x72, 0x44, 0x7a,
	0x12, 0xcf, 0x85, 0xeb, 0x37, 0x96, 0xe2, 0x27, 0x25, 0xf5, 0x3a, 0xa8, 0xde, 0x7b, 0x46, 0xbd,
	0x02, 0xf8, 0x66, 0xf4, 0xfb, 0x73, 0x17, 0x46, 0xb3, 0x38, 0xfe, 0x7f, 0xca, 0xe1, 0xf7, 0x61,
	0xc3, 0xe3, 0xd1, 0x69, 0x30, 0xc7, 0xec, 0x35, 0xe7, 0xce, 0xe2, 0xf8, 0x39, 0x6e, 0xda, 0xe6,
	0x23, 0xf9, 0x2d, 0xdc, 0x62, 0x51, 0x1a, 0x08, 0x1e, 0xa9, 0x96, 0x24, 0xf3, 0x50, 0x62, 0x52,
	0xfa, 0x81, 0x01, 0x15, 0x29, 0xfd, 0xa2, 0x86, 0x59, 0xbb, 0xba, 0x56, 0xce, 0xa5, 0xab, 0x34,
	0xb8, 0x7c, 0x95, 0xa6, 0x3f, 0x83, 0x77, 0x1b, 0xc5, 0xde, 0x28, 0x4c, 0xbf, 0xc1, 0x28, 0x5d,
	0xdb, 0xcf, 0xa1, 0xaf, 0x3a, 0xb5, 0xbe, 0xea, 0x5e, 0xe1, 0x2b, 0x7a, 0x04, 0x23, 0xbd, 0xe3,
	0x30, 0x69, 0xb3, 0x79, 0xad, 0xf8, 0x42, 0x54, 0xe7, 0x2a, 0x51, 0x01, 0x0c, 0xf3, 0x4d, 0x2c,
	0xc7, 0xa1, 0x3b, 0xcf, 0x04, 0x69, 0x42, 0xd5, 0xf6, 0x30, 0x88, 0x1c, 0xcf, 0x5d, 0x68, 0x4b,
	0x2d, 0x3b, 0xa7, 0xd1, 0x08, 0x2e, 0xa4, 0x79, 0x7a, 0x71, 0xad, 0x3a, 0x63, 0xc1, 0x97, 0x92,
	0xe9, 0x8a, 0x32, 0xb4, 0x0d, 0xa5, 0x06, 0xc3, 0x93, 0x28, 0x61, 0xb2, 0xc9, 0x21, 0xb7, 0x61,
	0x98, 0xe6, 0x61, 0xd7, 0xf3, 0x5a, 0xb1, 0x41, 0xbf, 0x80, 0xad, 0xe7, 0x67, 0x6e, 0x34, 0x67,
	0x58, 0xc3, 0xd6, 0xf7, 0x29, 0xfd, 0x6b, 0x1b, 0x6e, 0xcf, 0xe2, 0x78, 0xe6, 0xfb, 0x35, 0xb1,
	0x6d, 0x12, 0xf4, 0x75, 0x55, 0x97, 0xcd, 0xfd, 0x4f, 0x8c, 0x03, 0x1b, 0x05, 0xed, 0x55, 0xf2,
	0xb0, 0x90, 0x30, 0x7d, 0x0a, 0xe3, 0xff, 0x22, 0x9b, 0x7e, 0x0a, 0x5b, 0x2a, 0xf5, 0x45, 0xfa,
	0x2c, 0x88, 0xfc, 0x26, 0x8d, 0x71, 0xc6, 0xc3, 0x3c, 0x36, 0x02, 0x32, 0xf2, 0xc1, 0xaf, 0x60,
	0x54, 0xbe, 0xbf, 0xa4, 0x0f, 0xdd, 0x17, 0x42, 0x4c, 0x5a, 0x64, 0x0b, 0x86, 0x27, 0xf1, 0x31,
	0x8b, 0xfc, 0x20, 0x9a, 0x4f, 0xda, 0x64, 0x03, 0x3a, 0x27, 0xf1, 0xa4, 0x43, 0xc6, 0x00, 0xc7,
	0xee, 0x45, 0xb6, 0xdf, 0x25, 0xdb, 0xb0, 0xe9, 0x48, 0x9e, 0x33, 0x5a, 0x64, 0x00, 0x96, 0xda,
	0x98, 0xf4, 0xf6, 0xff, 0x78, 0x0b, 0x3a, 0x27, 0xaf, 0xc8, 0x1e, 0xf4, 0x70, 0xe4, 0x27, 0x23,
	0xe5, 0xa3, 0x6c, 0xfa, 0x9f, 0x62, 0xb7, 0x79, 0x69, 0x9a, 0xa7, 0x2d, 0xb2, 0x0b, 0x1b, 0x2f,
	0xf9, 0x9c, 0x2f, 0x25, 0x19, 0x2a, 0x16, 0x1c, 0x9c, 0xa7, 0xc5, 0x92, 0xb6, 0xc8, 0x1e, 0x80,
	0x1e, 0xeb, 0x54, 0xa7, 0x48, 0x36, 0x51, 0xac, 0xee, 0x19, 0xa7, 0xef, 0x64, 0x44, 0xfe, 0x16,
	0xd0, 0x16, 0xf9, 0x2c, 0xe3, 0x57, 0xfd, 0xa1, 0x56, 0x23, 0x9b, 0xaf, 0xa7, 0xdf, 0x53, 0x54,
	0x65, 0x48, 0xa4, 0x2d, 0xf2, 0x18, 0x46, 0xe5, 0xb9, 0x93, 0x94, 0xd8, 0xf2, 0x8b, 0xdb, 0x84,
	0xbd, 0x9f, 0x61, 0x0f, 0xd8, 0x82, 0x49, 0x56, 0x39, 0x70, 0xc5, 0x92, 0x7d, 0x18, 0x17, 0x73,
	0xc6, 0x9a, 0xd6, 0x7c, 0x5a, 0xc6, 0xd4, 0x58, 0x54, 0x99, 0x5e, 0xb4, 0xbf, 0x34, 0xbd, 0xbe,
	0xbf, 0x34, 0x7f, 0x93, 0xbf, 0x2a, 0x43, 0x9a, 0xf6, 0x57, 0x79, 0x4c, 0x25, 0x25, 0xb6, 0x8a,
	0xbf, 0x2e, 0x63, 0xef, 0x67, 0xd8, 0xeb, 0xfd, 0xf5, 0x19, 0x0c, 0xb2, 0x01, 0x85, 0x6c, 0x57,
	0xc6, 0x95, 0xe9, 0xc4, 0x6c, 0x94, 0x64, 0xdf, 0x6b, 0x93, 0x0f, 0xa1, 0x7f, 0x14, 0xce, 0xd7,
	0xb4, 0xfc, 0x03, 0x18, 0x1e, 0x85, 0xf3, 0xeb, 0xf5, 0xf8, 0x10, 0xfa, 0xc7, 0xc2, 0x5f, 0x53,
	0xe8, 0x7d, 0x64, 0x6e, 0x8a, 0x54, 0xd1, 0x4d, 0x63, 0x3e, 0xf4, 0x1d, 0x26, 0x51, 0x2e, 0xd1,
	0xa5, 0xb5, 0x3c, 0x11, 0xd5, 0x8b, 0xff, 0x04, 0x31, 0x28, 0xbe, 0x8c, 0x31, 0xb3, 0x90, 0x3e,
	0xa4, 0x98, 0x45, 0x68, 0x8b, 0x3c, 0x80, 0x0d, 0x87, 0xc9, 0x99, 0xef, 0x93, 0xd5, 0x6f, 0x75,
	0xbc, 0x1f, 0xc3, 0xd0, 0x61, 0xf2, 0x04, 0xab, 0xff, 0x1a, 0xec, 0x1f, 0x21, 0xbb, 0xf1, 0x5f,
	0x9d, 0x36, 0x55, 0x2f, 0x3a, 0x22, 0x5d, 0x3b, 0x29, 0x87, 0x79, 0x87, 0x47, 0x26, 0xd5, 0x86,
	0x6f, 0x3a, 0xa9, 0xb6, 0xb5, 0xb4, 0x45, 0x1e, 0x62, 0xbb, 0x56, 0x14, 0x06, 0x82, 0x82, 0x57,
	0x0a, 0x45, 0x2d, 0xee, 0xc7, 0x30, 0x76, 0x44, 0x5a, 0xfa, 0xf9, 0xb0, 0x12, 0x37, 0x34, 0x6c,
	0xf5, 0xd7, 0x45, 0xb4, 0x7d, 0xa0, 0xe5, 0x08, 0x59, 0xe1, 0xaf, 0x3b, 0x43, 0xdb, 0xae, 0x5e,
	0xca, 0x35, 0x98, 0xef, 0x02, 0x38, 0x22, 0x3d, 0x60, 0x89, 0x14, 0xfc, 0xe2, 0x9a, 0xbc, 0x74,
	0x44, 0x5a, 0x93, 0x6a, 0x0d, 0x2a, 0xcc, 0xe2, 0x78, 0x7d, 0xf7, 0xe7, 0x4d, 0x8b, 0x76, 0x7f,
	0xb9, 0x87, 0x99, 0x4e, 0xaa, 0x2d, 0x18, 0xba, 0x71, 0x94, 0x77, 0x0f, 0x0e, 0x93, 0x1a, 0x55,
	0x6e, 0x4d, 0x6a, 0x51, 0xfb, 0x30, 0xce, 0x51, 0xd8, 0x11, 0x68, 0x4b, 0xb2, 0xe6, 0xa0, 0x16,
	0xf3, 0x10, 0x6b, 0xe0, 0x1a, 0x81, 0xae, 0xe0, 0x7e, 0x09, 0xef, 0x36, 0xd6, 0x6c, 0xb2, 0x7b,
	0x5d, 0x49, 0xaf, 0x15, 0xf9, 0x15, 0xf6, 0x13, 0x36, 0x0b, 0x79, 0xca, 0xea, 0xa4, 0x5e, 0x6f,
	0xcc, 0x47, 0x30, 0x40, 0x09, 0xb9, 0xe9, 0xab, 0x41, 0xac, 0x70, 0x3f, 0x86, 0x6d, 0xa5, 0x23,
	0xfe, 0x0c, 0xa5, 0x5f, 0xd1, 0xf2, 0xdb, 0x9b, 0xff, 0xf2, 0x57, 0x8b, 0x7d, 0x84, 0xd8, 0x03,
	0x56, 0xc2, 0x62, 0x6a, 0xaf, 0xfe, 0x04, 0xdd, 0x00, 0x1d, 0x9b, 0xdc, 0xd1, 0xa5, 0x2e, 0xa9,
	0x45, 0xd6, 0x66, 0xd2, 0x53, 0x3c, 0x55, 0xef, 0x68, 0x70, 0x2d, 0xb6, 0xa1, 0xb8, 0x3e, 0x2a,
	0xd9, 0x7b, 0x05, 0xfa, 0x3a, 0x73, 0x6f, 0x08, 0xd5, 0x57, 0xa5, 0xe9, 0xb6, 0xd6, 0x06, 0xb0,
	0xf1, 0x21, 0xa8, 0x70, 0xdf, 0x05, 0x40, 0xad, 0xd6, 0xb9, 0xdb, 0xb3, 0x38, 0x6e, 0xba, 0xdb,
	0x15, 0xa9, 0xef, 0xc3, 0x86, 0x8a, 0x0f, 0x9f, 0xd7, 0x49, 0xc4, 0x5f, 0xea, 0x68, 0xeb, 0xd3,
	0x36, 0xf9, 0x1c, 0x0f, 0x37, 0xcd, 0xa3, 0xbe, 0x35, 0x2b, 0xcd, 0x64, 0xad, 0xec, 0x9f, 0xe8,
	0x29, 0x53, 0xa4, 0x27, 0xd1, 0x0d, 0x60, 0xdf, 0x6e, 0xe0, 0xbf, 0x40, 0x9f, 0xff, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x0f, 0x10, 0xe1, 0xfb, 0x11, 0x1a, 0x00, 0x00,
}
